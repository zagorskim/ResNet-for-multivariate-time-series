table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE, ) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE, format = "html",
caption = "",
align = "c",
colWidths = c("3cm", "3cm", "3cm"),
booktabs = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE, format = "html",
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE, format = "html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- mat %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_uncut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
table <- confusion1_uncut %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Print the table in the R Markdown document
cat(table)
table <- confusion1_cut %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
dim(confusion1_cut)
# Generate the table with customized style and row/column names
rownames(confusion1_cut) <- 1:dim(confusion1_cut)[1]
table <- confusion1_cut %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Print the table in the R Markdown document
cat(table)
# Generate the table with customized style and row/column names
rownames(confusion1_cut) <- 1:dim(confusion1_cut)[1]
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Print the table in the R Markdown document
cat(table)
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
rownames(confusion1_cut) <- 1:dim(confusion1_cut)[1]
colnames(confusion1_cut) <- 1:dim(confusion1_cut)[2]
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
1:dim(confusion1_cut)[2]
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
colnames(confusion1_cut) <- 1:dim(confusion1_cut)[2]
colnames(confusion1_cut) <- as.char(1:dim(confusion1_cut)[2])
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
colnames(confusion1_cut) <- as.character(1:dim(confusion1_cut)[2])
table <- confusion1_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Generate the table with customized style and row/column names
rownames(confusion1_cut) <- 1:dim(confusion1_cut)[1]
colnames(confusion1_cut) <- 1:dim(confusion1_cut)[2]
confusion1_cut
cat(confusion1_cut)
table <- confusion2_cut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
table <- confusion2_uncut %>%
kable(row.names = TRUE, col.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
table <- confusion2_uncut %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Print the table in the R Markdown document
cat(table)
# Generate the table with customized style and row/column names
rownames(confusion2_uncut) <- 1:dim(confusion2_cut)[1]
colnames(confusion2_uncut) <- 1:dim(confusion2_cut)[2]
table <- confusion2_uncut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
# Print the table in the R Markdown document
cat(table)
df <- data.frame(
cut_accuracy = c(cut1_acc, cut2_acc, cut3_acc, cut4_acc, cut5_acc, cut6_acc),
uncut_accuracy = c(uncut1_acc, uncut2_acc, uncut3_acc, uncut4_acc, uncut5_acc, uncut6_acc),
cut_sd = c(cut1_sd, cut2_sd, cut3_sd, cut4_sd, cut5_sd, cut6_sd),
uncut_sd = c(uncut1_sd, uncut2_sd, uncut3_sd, uncut4_sd, uncut5_sd, uncut6_sd)
)
# Tests and metrics
# Trace
cut1_acc <- rep(0, 3)
cut1_acc
cut1_acc <- rep(0, 3)
for(i in 1:3)
to[model1_cut <- model, history1_cut <- history, evaluation1_cut <- evaluation, confusion1_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Trace", epochs = 300, batch_size = 32, format = "arff")
cut1_acc[3] <- evaluation1_cut[2]
cut1_acc
cut1_acc <- rep(0, 3)
for(i in 1:2) {
to[model1_cut <- model, history1_cut <- history, evaluation1_cut <- evaluation, confusion1_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Trace", epochs = 3, batch_size = 32, format = "arff")
cut1_acc[i] <- evaluation1_cut[2]
}
cut1_sd <- sd(cut1_acc) # TBD: check what sd is needed
cut1_results <- mean(cut1_acc)
cut1_acc
cut1_sd
cut1_results
cut1_acc <- rep(0, 3)
for(i in 1:3) {
to[model1_cut <- model, history1_cut <- history, evaluation1_cut <- evaluation, confusion1_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Trace", epochs = 3, batch_size = 32, format = "arff")
cut1_acc[i] <- evaluation1_cut[2]
}
cut1_sd <- sd(cut1_acc) # TBD: check what sd is needed
cut1_results <- mean(cut1_acc)
cut1_acc <- rep(0, 3)
for(i in 1:3) {
to[model1_cut <- model, history1_cut <- history, evaluation1_cut <- evaluation, confusion1_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Trace", epochs = 300, batch_size = 32, format = "arff")
cut1_acc[i] <- evaluation1_cut[2]
}
cut1_sd <- sd(cut1_acc) # TBD: check what sd is needed
cut1_results <- mean(cut1_acc)
cut1_acc
cut1_sd
cut1_results
uncut1_acc <- rep(0, 3)
for(i in 1:3) {
to[model1_uncut <- model, history1_uncut <- history, evaluation1_uncut <- evaluation, confusion1_uncut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Trace", epochs = 300, batch_size = 32, format = "arff")
uncut1_acc[i] <- evaluation1_uncut[2]
}
uncut1_sd <- sd(uncut1_acc)
uncut1_results <- mean(cut1_acc)
cut1_sd
cut1_results
uncut1_acc
uncut1_sd
uncut1_results
cut1_sd
uncut1_acc
cut1_acc
cut1_sd
uncut1_sd
uncut1_results
cut1_results
cut2_acc <- rep(0, 3)
for(i in 1:3) {
to[model2_cut <- model, history2_cut <- history, evaluation2_cut <- evaluation, confusion2_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Car", epochs = 600, batch_size = 32, format = "arff")
cut2_acc[i] <- evaluation2_cut[2]
}
cut2_sd <- sd(cut2_acc)
cut2_results <- mean(cut2_acc)
cut2_sd
cut2_results
cut2_acc
uncut1_acc
cut2_acc
cut2_results
uncut2_acc <- rep(0, 3)
for(i in 1:3) {
to[model2_uncut <- model, history2_uncut <- history, evaluation2_uncut <- evaluation, confusion2_uncut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Car", epochs = 600, batch_size = 32, format = "arff")
uncut2_acc[i] <- evaluation2_uncut[2]
}
uncut2_sd <- sd(uncut2_acc)
uncut2_results <- mean(uncut2_acc)
uncut1_acc
uncut1_sd
cut1_sd
uncut1_acc <- rep(0, 3)
for(i in 1:3) {
to[model1_uncut <- model, history1_uncut <- history, evaluation1_uncut <- evaluation, confusion1_uncut <- confusion_matrix] <- train_model_uncut(TRUE, dataset = "Trace", epochs = 300, batch_size = 32, format = "arff")
uncut1_acc[i] <- evaluation1_uncut[2]
}
uncut1_acc <- rep(0, 3)
for(i in 1:3) {
to[model1_uncut <- model, history1_uncut <- history, evaluation1_uncut <- evaluation, confusion1_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Trace", epochs = 300, batch_size = 32, format = "arff")
uncut1_acc[i] <- evaluation1_uncut[2]
}
uncut1_sd <- sd(uncut1_acc)
uncut1_results <- mean(cut1_acc)
uncut1_results
uncut1_acc
uncut1_results
uncut1_sd
uncut1_results <- mean(uncut1_acc)
uncut1_results
evaluation1_uncut
train_model_uncut <- function(dataset = "BeetleFly", format = "txt", epochs = 100, batch_size = 32) {
d <- read_data(dataset, format)
if(format == "txt") {
isTxt <- TRUE
} else
isTxt <- FALSE
t <- data_preprocessing(d, isTxt)
train_x <- t[[1]]
train_y <- t[[2]]
test_x <- t[[3]]
test_y <- t[[4]]
class_number <- t[[5]]
input_shape <- t[[6]]
model <- resnet_hfwaz(input_shape, class_number)
callbacks <- list(
callback_model_checkpoint("best_model.h5", save_best_only = TRUE, monitor = "val_loss"),
callback_reduce_lr_on_plateau(monitor = "val_loss", factor = 0.5, patience = 20, min_lr = 0.0001)
#callback_early_stopping(monitor = "val_loss", patience = 50, verbose = 1)
)
# Train the model
history <- model %>% compile(
loss = "categorical_crossentropy",
optimizer = optimizer_adam(),
metrics = c("accuracy"),
) %>% fit(
train_x, train_y,
batch_size = batch_size,
epochs = epochs,
validation_data = list(test_x, test_y),
callbacks = callbacks
)
load_model_weights_hdf5(object=model, filepath=paste(getwd(), "/best_model.h5", sep = ''))
# Evaluate the model
eval <- model %>% evaluate(test_x, test_y)
prediction <- predict(model, test_x)
prediction <- max.col(prediction)
labels <- 1:length(test_y[1,])
test_y_decoded <- labels[max.col(test_y)]
confusion_matrix <- table(test_y_decoded, prediction)
sd(prediction)
ret <- list(model, history, eval, confusion_matrix)
names(ret) <- c("model", "history", "evaluation", "confusion_matrix")
return(ret)
}
uncut1_acc <- rep(0, 3)
for(i in 1:3) {
to[model1_uncut <- model, history1_uncut <- history, evaluation1_uncut <- evaluation, confusion1_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Trace", epochs = 300, batch_size = 32, format = "arff")
uncut1_acc[i] <- evaluation1_uncut[2]
}
uncut1_sd <- sd(uncut1_acc)
uncut1_results <- mean(uncut1_acc)
uncut1_acc
uncut1_sd
uncut1_results
uncut2_acc <- rep(0, 3)
for(i in 1:3) {
to[model2_uncut <- model, history2_uncut <- history, evaluation2_uncut <- evaluation, confusion2_uncut <- confusion_matrix] <- train_model_uncut(TRUE, dataset = "Car", epochs = 600, batch_size = 32, format = "arff")
uncut2_acc[i] <- evaluation2_uncut[2]
}
uncut2_acc <- rep(0, 3)
for(i in 1:3) {
to[model2_uncut <- model, history2_uncut <- history, evaluation2_uncut <- evaluation, confusion2_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Car", epochs = 600, batch_size = 32, format = "arff")
uncut2_acc[i] <- evaluation2_uncut[2]
}
uncut2_sd <- sd(uncut2_acc)
uncut2_results <- mean(uncut2_acc)
# Rock
uncut2_sd
uncut2_results
cut2_results
cut3_sd
# Rock
cut3_acc <- rep(0, 3)
for(i in 1:3) {
to[model3_cut <- model, history3_cut <- history, evaluation3_cut <- evaluation, confusion3_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Rock", epochs = 300, batch_size = 32, format = "arff")
cut3_acc[i] <- evaluation3_cut[2]
}
uncut3_sd
uncut3_acc <- rep(0, 3)
for(i in 1:3) {
to[model3_uncut <- model, history3_uncut <- history, evaluation3_uncut <- evaluation, confusion3_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Rock", epochs = 300, batch_size = 32, format = "arff")
uncut3_acc[i] <- evaluation3_uncut[2]
}
cut3_acc <- rep(0, 3)
for(i in 1:3) {
to[model3_cut <- model, history3_cut <- history, evaluation3_cut <- evaluation, confusion3_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Rock", epochs = 300, batch_size = 32, format = "arff")
cut3_acc[i] <- evaluation3_cut[2]
}
download <- TRUE
dataset <- "Rock"
format <- arff
to[model3_cut <- model, history3_cut <- history, evaluation3_cut <- evaluation, confusion3_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Rock", epochs = 300, batch_size = 32, format = "txt")
uncut3_acc <- rep(0, 3)
for(i in 1:3) {
to[model3_uncut <- model, history3_uncut <- history, evaluation3_uncut <- evaluation, confusion3_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Rock", epochs = 300, batch_size = 32, format = "txt")
uncut3_acc[i] <- evaluation3_uncut[2]
}
source("D:/PW/Warsztaty z Technik Uczenia Maszynowego/FastTrack4/ResNet_models.R", echo=TRUE)
data <- get_data(download, dataset, format, train_path, test_path)
trainTarget <- 1
testTarget <- 1
if(!isTxt) {
trainTarget = length(data[[1]])
testTarget = length(data[[2]])
}
isTxt
train <- as.data.frame(do.call(cbind, data[[1]]))
train <- train[sample(1:nrow(train)), ]
test <- as.data.frame(do.call(cbind, data[[2]]))
test <- test[sample(1:nrow(train)), ]
train_x <- train[,-trainTarget]
test_x <- test[,-testTarget]
train_y <- as.numeric(train[,trainTarget]) - 1
test_y <- as.numeric(test[,testTarget]) - 1
train_y
test_y
test_y <- as.numeric(test[,testTarget]) - 1
test_y
test
View(test)
cut4_acc <- rep(0, 3)
for(i in 1:3) {
to[model4_cut <- model, history4_cut <- history, evaluation4_cut <- evaluation, confusion4_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Colposcopy", epochs = 300, batch_size = 32, format = "arff")
cut4_acc[i] <- evaluation4_cut[2]
}
cut4_sd <- sd(cut4_acc)
cut4_results <- mean(cut4_acc)
cut4_results
cut4_sd
uncut4_acc <- rep(0, 3)
for(i in 1:3) {
to[model4_uncut <- model, history4_uncut <- history, evaluation4_uncut <- evaluation, confusion4_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Colposcopy", epochs = 300, batch_size = 32, format = "arff")
uncut4_acc[i] <- evaluation4_uncut[2]
}
uncut4_sd <- sd(uncut4_acc)
uncut4_results <- mean(uncut4_acc)
uncut4_results
cut4_results
cut4_acc
uncut4_acc
uncut4_acc <- rep(0, 3)
for(i in 1:3) {
to[model4_uncut <- model, history4_uncut <- history, evaluation4_uncut <- evaluation, confusion4_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Colposcopy", epochs = 300, batch_size = 32, format = "arff")
uncut4_acc[i] <- evaluation4_uncut[2]
}
uncut4_sd <- sd(uncut4_acc)
uncut4_results <- mean(uncut4_acc)
uncut4_sd
uncut4_results
cut4_results
cut4_acc <- rep(0, 3)
for(i in 1:3) {
to[model4_cut <- model, history4_cut <- history, evaluation4_cut <- evaluation, confusion4_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Colposcopy", epochs = 300, batch_size = 32, format = "arff")
cut4_acc[i] <- evaluation4_cut[2]
}
cut4_sd <- sd(cut4_acc)
cut4_results <- mean(cut4_acc)
cut4_results
cut4_acc
uncut4_results
uncut5_acc <- rep(0, 3)
for(i in 1:3) {
to[model5_uncut <- model, history5_uncut <- history, evaluation5_uncut <- evaluation, confusion5_uncut <- confusion_matrix] <- train_model_uncut(dataset = "Adiac", epochs = 300, batch_size = 32, format = "arff")
uncut5_acc[i] <- evaluation5_uncut[2]
}
uncut5_sd <- sd(uncut5_acc)
uncut5_results <- mean(uncut5_acc)
cut5_results
uncut5_results
cut5_acc <- rep(0, 3)
for(i in 1:3) {
to[model5_cut <- model, history5_cut <- history, evaluation5_cut <- evaluation, confusion5_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "Adiac", epochs = 300, batch_size = 32, format = "arff")
cut5_acc[i] <- evaluation5_cut[2]
}
cut5_sd <- sd(cut5_acc)
cut5_results <- mean(cut5_acc)
cut5_results
cut5_sd
uncut5_results
cut5_results
cut6_acc <- rep(0, 3)
for(i in 1:3) {
to[model6_cut <- model, history6_cut <- history, evaluation6_cut <- evaluation, confusion6_cut <- confusion_matrix] <- train_model_cut(TRUE, dataset = "CricketX", epochs = 300, batch_size = 32, format = "arff")
cut6_acc[i] <- evaluation6_cut[2]
}
cut6_sd <- sd(cut6_acc)
cut6_results <- mean(cut6_acc)
uncut6_acc <- rep(0, 3)
for(i in 1:3) {
to[model6_uncut <- model, history6_uncut <- history, evaluation6_uncut <- evaluation, confusion6_uncut <- confusion_matrix] <- train_model_uncut(dataset = "CricketX", epochs = 300, batch_size = 32, format = "arff")
uncut6_acc[i] <- evaluation6_uncut[2]
}
uncut6_sd <- sd(uncut6_acc)
uncut6_results <- mean(uncut6_acc)
cut6_results
uncut6_results
uncut6_sd
cut6_sd
df <- data.frame(
cut_accuracy = c(cut1_results, cut2_results, cut3_results, cut4_results, cut5_results, cut6_results),
uncut_accuracy = c(uncut1_results, uncut2_results, uncut3_results, uncut4_results, uncut5_results, uncut6_results),
cut_sd = c(cut1_sd, cut2_sd, cut3_sd, cut4_sd, cut5_sd, cut6_sd),
uncut_sd = c(uncut1_sd, uncut2_sd, uncut3_sd, uncut4_sd, uncut5_sd, uncut6_sd)
)
df <- data.frame(
cut_accuracy = c(cut1_results, cut2_results, cut4_results, cut5_results, cut6_results),
uncut_accuracy = c(uncut1_results, uncut2_results, uncut4_results, uncut5_results, uncut6_results),
cut_sd = c(cut1_sd, cut2_sd, cut4_sd, cut5_sd, cut6_sd),
uncut_sd = c(uncut1_sd, uncut2_sd, uncut4_sd, uncut5_sd, uncut6_sd)
)
row.names(df) <- c("Trace", "Car", "Colposcopy", "Adiac", "CricketX")
table <- kable(
df,
row.names = TRUE,
col.names = c("Cut accuracy", "Uncut accuracy", "Cut sd", "Uncut sd"),
format = "html",
caption = "",
align = "c",
colWidths = c("3cm", "3cm", "3cm"),
booktabs = TRUE
) %>%
kable_styling(
bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE
)
cat(table)
rownames(confusion1_cut) <- 1:dim(confusion2_cut)[1]
colnames(confusion1_cut) <- 1:dim(confusion2_cut)[2]
table <- confusion1_cut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion1_uncut) <- 1:dim(confusion2_cut)[1]
colnames(confusion1_uncut) <- 1:dim(confusion2_cut)[2]
table <- confusion1_uncut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion2_cut) <- 1:dim(confusion2_cut)[1]
colnames(confusion2_cut) <- 1:dim(confusion2_cut)[2]
table <- confusion2_cut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion2_uncut) <- 1:dim(confusion2_cut)[1]
colnames(confusion2_uncut) <- 1:dim(confusion2_cut)[2]
table <- confusion2_uncut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion4_cut) <- 1:dim(confusion2_cut)[1]
rownames(confusion4_cut) <- 1:dim(confusion4_cut)[1]
colnames(confusion4_cut) <- 1:dim(confusion4_cut)[2]
table <- confusion4_cut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion4_uncut) <- 1:dim(confusion4_uncut)[1]
colnames(confusion4_uncut) <- 1:dim(confusion4_uncut)[2]
table <- confusion4_uncut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion5_cut) <- 1:dim(confusion5_cut)[1]
colnames(confusion5_cut) <- 1:dim(confusion5_cut)[2]
table <- confusion5_cut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion5_uncut) <- 1:dim(confusion5_uncut)[1]
colnames(confusion5_uncut) <- 1:dim(confusion5_uncut)[2]
table <- confusion5_uncut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion5_uncut) <- 1:dim(confusion5_uncut)[1]
colnames(confusion5_uncut) <- 1:dim(confusion5_uncut)[2]
table <- confusion5_uncut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
confusion5_uncut
table
rownames(confusion6_cut) <- 1:dim(confusion6_cut)[1]
colnames(confusion6_cut) <- 1:dim(confusion6_cut)[2]
table <- confusion6_cut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
rownames(confusion6_uncut) <- 1:dim(confusion6_uncut)[1]
colnames(confusion6_uncut) <- 1:dim(confusion6_uncut)[2]
table <- confusion6_uncut %>%
kable(row.names = TRUE) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
cat(table)
